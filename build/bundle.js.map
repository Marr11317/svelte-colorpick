{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../../src/color.js","../../../src/dimensions.js","../../../src/event.js","../../../src/touch.js","../../../src/Scrollbar.svelte","../../../src/Matrix.svelte","../../../src/DimInput.svelte","../../../src/HexInput.svelte","../../../src/ColorPicker.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import * as d3 from 'd3-color'\n\nexport default class Color {\n\tconstructor (mode, data) {\n\t\tthis.mode = mode\n\t\tthis.data = data\n\t}\n\t\n\tstatic rgb (rgb) {\n\t\treturn new Color('rgb', rgb)\n\t}\n\n\tstatic hex (hex) {\n\t\treturn new Color('rgb', d3.rgb(hex))\n\t}\n\n\tstatic hsl (hsl) {\n\t\treturn new Color('hsl', hsl)\n\t}\n\n\tstatic hcl (hcl) {\n\t\treturn new Color('hcl', hcl)\n\t}\n\n\talter (mode, key, value) {\n\t\t// express the current color in the desired mode\n\t\tconst colMode = this.to(mode)\n\n\t\t// alter the dimension\n\t\tlet data = JSON.parse(JSON.stringify(colMode.data))\n\t\tdata[key] = value\n\n\t\treturn new Color(mode, data)\n\t}\n\n\tget (mode, dim) {\n\t\treturn this.to(mode).data[dim]\n\t}\n\n\ttuple () {\n\t\treturn this.mode.split('').map(k => this.data[k])\n\t}\n\n\tto (mode) {\n\t\tif (this.mode === mode) {\n\t\t\treturn this\n\t\t} else if (this.mode === 'rgb') {\n\t\t\tconst tuple = this.tuple()\n\t\t\tconst color = d3.rgb(...tuple)\n\t\t\tconst colorConverted = d3[mode](color)\n\t\t\treturn new Color(mode, colorConverted)\n\t\t} else if (mode === 'rgb') {\n\t\t\tconst tuple = this.tuple()\n\t\t\tlet color = d3[this.mode](...tuple).rgb()\n\n\t\t\t// clamp within [0, 255]\n\t\t\tcolor = Object.fromEntries(Object.entries(color).map(([k, v]) => v < 0 ? [k, 0] : (v > 255 ? [k, 255] : [k, v])))\n\n\t\t\treturn new Color('rgb', color)\n\t\t} else {\n\t\t\tconst colorRgb = this.to('rgb')\n\t\t\tconst colorConverted = colorRgb.to(mode)\n\t\t\treturn colorConverted\n\t\t}\n\t}\n\n\ttoHex () {\n\t\tconst vals = Object.values(this.data)\n\t\tconst color = d3[this.mode](...vals)\n\t\tconst hex = color.formatHex()\n\t\treturn hex\n\t}\n\n\tisDark () {\n\t\tlet color = this.to('rgb').data\n\t\treturn (color.r * 0.299 + color.g * 0.587 + color.b * 0.114) <= 186\n\t}\n}\n\n\n","export const dimensions = {\n\thsl: {\n\t\th: {extent: [0, 360], scale: 1, title: 'hue'},\n\t\ts: {extent: [0, 100], scale: 100, title: 'saturation'},\n\t\tl: {extent: [0, 100], scale: 100, title: 'luminance'},\n\t},\n\t\n\thcl: {\n\t\th: {extent: [0, 360], scale: 1, title: 'hue'},\n\t\tc: {extent: [0, 150], scale: 1, title: 'chroma'},\n\t\tl: {extent: [0, 100], scale: 1, title: 'luminance'},\n\t},\n\n\tlab: {\n\t\tl: {extent: [0, 100], scale: 1, title: 'L'},\n\t\ta: {extent: [-160, 160], scale: 1, title: 'a'},\n\t\tb: {extent: [-160, 160], scale: 1, title: 'b'},\n\t},\n\t\n\trgb: {\n\t\tr: {extent: [0, 255], scale: 1, title: 'red'},\n\t\tg: {extent: [0, 255], scale: 1, title: 'green'},\n\t\tb: {extent: [0, 255], scale: 1, title: 'blue'},\n\t},\n}\n\nexport function getDimension(specifier) {\n\tlet [scale, dim] = specifier.split('.', 2)\n\treturn {\n\t\tscale,\n\t\tdim,\n\t\tdata: dimensions[scale][dim]\n\t}\n}\n","export function relativePosition (e) {\n\tlet clientX = e.clientX\n\tlet clientY = e.clientY\n\n\tlet rect = e.target.getBoundingClientRect()\n\tconst relativeX = clientX - rect.x\n\tconst relativeY = clientY - rect.y\n\n\treturn {\n\t\tclientX,\n\t\tclientY,\n\t\toffsetX: rect.x,\n\t\toffsetY: rect.y,\n\t\trelativeX,\n\t\trelativeY,\n\t}\n}\n","\nconst eventTypeConversion = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\n}\n\nfunction touchHandler(event) {\n\tlet touches = event.changedTouches\n\tlet first = touches[0]\n\tlet type = eventTypeConversion[event.type]\n\n\tif (!type) { return }\n\n\tlet simulatedEvent = new MouseEvent(type, {\n\t\tscreenX: first.screenX,\n\t\tscreenY: first.screenY,\n\t\tclientX: first.clientX,\n\t\tclientY: first.clientY,\n\t\tbutton: 0,\n\t\tbuttons: 1,\n\t})\n\n\tevent.target.dispatchEvent(simulatedEvent)\n\tevent.preventDefault()\n}\n\nexport default function touchToMouse(element) {\n\telement.addEventListener(\"touchstart\", touchHandler, true)\n\telement.addEventListener(\"touchmove\", touchHandler, true)\n\telement.addEventListener(\"touchend\", touchHandler, true)\n\telement.addEventListener(\"touchcancel\", touchHandler, true)\n}\n","<script>\n\timport Color from './color'\n\timport { onMount } from 'svelte'\n\n\timport { getDimension } from './dimensions'\n\timport { relativePosition } from './event'\n\timport touchToMouse from './touch'\n\n\texport let color = Color.hex('#00fff00')\n\texport let dimension = 'hsl.h'\n\texport let detail = 100\n\n\texport let width = null\n\texport let height = null\n\n\tlet canvas\n\tlet ctx\n\tlet cWidth\n\tlet cHeight\n\n\tonMount(() => {\n\t\tctx = canvas.getContext('2d')\n\t\ttouchToMouse(canvas)\n\t})\n\n\t$: dim = getDimension(dimension)\n\n\t$: value = color.get(dim.scale, dim.dim) * dim.data.scale\n\t$: sliderPos = (cWidth - 2) * (value - dim.data.extent[0]) / (dim.data.extent[1] - dim.data.extent[0])\n\n\t$: {\n\t\tif (ctx) {\n\t\t\tctx.imageSmoothingEnabled = false\n\t\t\tctx.clearRect(0, 0, cWidth, cHeight)\n\n\t\t\tlet d = Math.min(detail, cWidth - 2)\n\t\t\tlet xStep = (cWidth - 2) / d\n\t\t\tlet range = dim.data.extent[1] - dim.data.extent[0]\n\n\t\t\tconst colBase = color.to(dim.scale)\n\n\t\t\tfor(let i = 0; i <= d; i++) {\n\t\t\t\tconst v = (i / d * range + dim.data.extent[0]) / dim.data.scale\n\t\t\t\tconst col = colBase.alter(dim.scale, dim.dim, v)\n\t\t\t\tctx.fillStyle = col.toHex()\n\t\t\t\tctx.fillRect(Math.round(i * xStep), 0, Math.ceil(xStep), cHeight)\n\t\t\t}\n\n\t\t\tctx.fillStyle = '#ffffff'\n\t\t\tctx.fillRect(sliderPos - 1, 0, 3, cHeight)\n\n\t\t\tctx.fillStyle = '#000000'\n\t\t\tctx.fillRect(sliderPos, 0, 1, cHeight)\n\t\t}\n\t}\n\n\tfunction onMouse(e) {\n\t\tif (e.buttons === 1) {\n\t\t\tconst pos = relativePosition(e)\n\t\t\tlet x = pos.relativeX\n\n\t\t\tlet v = (x / (cWidth - 2)) * (dim.data.extent[1] - dim.data.extent[0]) + dim.data.extent[0]\n\t\t\tif (v > dim.data.extent[1]) { v = dim.data.extent[1] }\n\t\t\tif (v < dim.data.extent[0]) { v = dim.data.extent[0] }\n\t\t\tcolor = color.alter(dim.scale, dim.dim, v / dim.data.scale)\n\t\t}\n\t}\n</script>\n\n<div class='scrollbar' bind:clientWidth={cWidth} bind:clientHeight={cHeight}>\n\t<canvas bind:this={canvas} width={width} height={height} on:mousedown={onMouse} on:mousemove={onMouse}>\n</div>\n\n<style>\n\t.scrollbar, canvas {\n\t\tdisplay: inline-block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tline-height: 0;\n\t}\n\n\tcanvas {\n\t\tborder: 1px solid #000;\n\t\tborder-radius: 2px;\n\t\tcursor: col-resize;\n\t}\n</style>\n","<script>\n\timport Color from './color'\n\timport { onMount } from 'svelte'\n\n\timport { getDimension } from './dimensions'\n\timport { relativePosition } from './event'\n\timport touchToMouse from './touch'\n\n\texport let color = Color.hex('#00ff00')\n\texport let dimensionX = 'hsl.l'\n\texport let dimensionY = 'hsl.s'\n\texport let detailX = 100\n\texport let detailY = 100\n\n\texport let width = null\n\texport let height = null\n\n\tlet canvas\n\tlet ctx\n\tlet cWidth\n\tlet cHeight\n\n\tonMount(() => {\n\t\tctx = canvas.getContext('2d')\n\t\ttouchToMouse(canvas)\n\t})\n\n\t$: dimX = getDimension(dimensionX)\n\t$: dimY = getDimension(dimensionY)\n\n\t$: valueX = color.get(dimX.scale, dimX.dim) * dimX.data.scale\n\t$: valueY = color.get(dimY.scale, dimY.dim) * dimY.data.scale\n\n\t$: sliderPosX = cWidth * (valueX - dimX.data.extent[0]) / (dimX.data.extent[1] - dimX.data.extent[0])\n\t$: sliderPosY = cHeight - cHeight * (valueY - dimY.data.extent[0]) / (dimY.data.extent[1] - dimY.data.extent[0])\n\n\t$: {\n\t\tif (ctx) {\n\t\t\tctx.clearRect(0, 0, cWidth, cHeight)\n\t\t\tctx.imageSmoothingEnabled = false\n\n\t\t\tlet dX = Math.min(detailX, cWidth - 2)\n\t\t\tlet dY = Math.min(detailY, cHeight - 2)\n\t\t\tlet xStep = (cWidth - 2) / dX\n\t\t\tlet yStep = (cHeight - 2) / dY\n\t\t\tlet rangeX = dimX.data.extent[1] - dimX.data.extent[0]\n\t\t\tlet rangeY = dimY.data.extent[1] - dimY.data.extent[0]\n\n\t\t\tconst colBase = color.to(dimY.scale)\n\t\t\tfor (let y = 0; y <= dY; y++) {\n\t\t\t\tconst vY = (y / detailY * rangeY + dimY.data.extent[0]) / dimY.data.scale\n\t\t\t\tconst colY = colBase.alter(dimY.scale, dimY.dim, vY)\n\n\t\t\t\tfor(let x = 0; x <= dX; x++) {\n\t\t\t\t\tconst vX = (x / detailX * rangeX + dimX.data.extent[0]) / dimX.data.scale\n\t\t\t\t\tconst colYX = colY.alter(dimX.scale, dimX.dim, vX)\n\t\t\t\t\tctx.fillStyle = colYX.toHex()\n\t\t\t\t\tctx.fillRect(Math.round(x * xStep), Math.round((cHeight - 2) - y * yStep), Math.ceil(xStep), Math.ceil(yStep))\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.fillStyle = '#ffffff'\n\t\t\tctx.fillRect(sliderPosX - 2, sliderPosY - 2, 5, 5)\n\n\t\t\tctx.fillStyle = '#000000'\n\t\t\tctx.fillRect(sliderPosX - 1, sliderPosY - 1, 3, 3)\n\t\t}\n\t}\n\n\tfunction onMouse(e) {\n\t\tif (e.buttons === 1) {\n\t\t\tconst pos = relativePosition(e)\n\t\t\tlet x = pos.relativeX\n\t\t\tlet y = (cHeight - 2) - pos.relativeY\n\n\t\t\tlet vX = (x / (cWidth - 2)) * (dimX.data.extent[1] - dimX.data.extent[0]) + dimX.data.extent[0]\n\t\t\tif (vX > dimX.data.extent[1]) { vX = dimX.data.extent[1] }\n\t\t\tif (vX < dimX.data.extent[0]) { vX = dimX.data.extent[0] }\n\n\t\t\tlet vY = (y / (cHeight - 2)) * (dimY.data.extent[1] - dimY.data.extent[0]) + dimY.data.extent[0]\n\t\t\tif (vY > dimY.data.extent[1]) { vY = dimY.data.extent[1] }\n\t\t\tif (vY < dimY.data.extent[0]) { vY = dimY.data.extent[0] }\n\n\t\t\tconst colY = color.alter(dimY.scale, dimY.dim, vY / dimY.data.scale)\n\t\t\tcolor = colY.alter(dimX.scale, dimX.dim, vX / dimX.data.scale)\n\t\t}\n\t}\n</script>\n\n<div class='matrix' bind:clientWidth={cWidth} bind:clientHeight={cHeight}>\n\t<canvas bind:this={canvas} width={width} height={height} on:mousedown={onMouse} on:mousemove={onMouse}>\n</div>\n\n<style>\n\t.matrix, canvas {\n\t\tdisplay: inline-block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tline-height: 0;\n\t}\n\n\tcanvas {\n\t\tborder: 1px solid #666;\n\t\tborder-radius: 5px;\n\t\tcursor: crosshair;\n\t}\n</style>\n","<script>\n\timport Color from './color'\n\timport { getDimension} from './dimensions'\n\n\texport let color = Color.hex('#00ff00')\n\texport let dimension = 'hsl.h'\n\n\t$: dim = getDimension(dimension)\n\t$: value = color.get(dim.scale, dim.dim) * dim.data.scale\n\t$: roundedValue = Math.round(value)\n\n\tfunction onChange(e) {\n\t\tlet v = +e.target.value\n\t\tcolor = color.alter(dim.scale, dim.dim, v / dim.data.scale)\n\t}\n</script>\n\n<input\n\ttype=\"number\"\n\tvalue={roundedValue}\n\tmin={dim.data.extent[0]}\n\tmax={dim.data.extent[1]}\n\ton:change={onChange}\n/>\n\n<style>\n\tinput[type=number] {\n\t\tdisplay: inline-block;\n\t\tmargin: 0 0 0 5px;\n\t\tpadding: 5px 0 5px 5px;\n\t\twidth: 60px;\n\t\theight: 30px;\n\t}\n</style>\n","<script>\n\timport Color from './color'\n\n\texport let color = Color.hex('#00ff00')\n\texport let id = null\n\texport let width = null\n\n\t$: value = color.toHex()\n\n\tfunction onChange(e) {\n\t\tlet v = Color.hex(e.target.value)\n\t\tif (v.data != null) {\n\t\t\tcolor = v\n\t\t} else {\n\t\t\te.target.value = value\n\t\t}\n\t}\n</script>\n\n<input\n\tid={id}\n\tvalue={value}\n\ton:change={onChange}\n\tstyle='width: {width}px;'\n/>\n\n<style>\n\tinput {\n\t\tfont-family: monospace;\n\t\tfont-size: 120%;\n\t\tmargin: 0;\n\t\tpadding: 5px;\n\t}\n</style>\n","<script>\n\timport { createEventDispatcher } from 'svelte'\n\n\timport Color from './color'\n\timport { dimensions, getDimension } from './dimensions.js'\n\n\timport ScrollBar from './Scrollbar.svelte'\n\timport Matrix from './Matrix.svelte'\n\timport DimInput from './DimInput.svelte'\n\timport HexInput from './HexInput.svelte'\n\n\texport let color = Color.hex('#ff9900')\n\n\tconst dispatch = createEventDispatcher();\n\n\t$: {\n\t\t\tif (typeof color === 'string') {\n\t\t\tcolor = Color.hex(color)\n\t\t}\n\t}\n\n\texport let selectedDimension = 'hsl.h'\n\texport let selectedTab = 'hsl'\n\texport let background = '#fff'\n\n\texport let collapse = false\n\texport let tabbed = false\n\n\texport let handleWidth = 32\n\texport let handleHeight = 32\n\n\texport let showMatrix = true\n\texport let showSliders = null\n\n\tif (showSliders == null) {\n\t\tfor (const scale in dimensions) {\n\t\t\tfor (const dim in dimensions[scale]) {\n\t\t\t\tshowSliders[`${scale}.${dim}`] = true\n\t\t\t}\n\t\t}\n\t}\n\n\texport let showHex = true\n\texport let showNumeric = true\n\texport let showLabels = true\n\n\texport let selectDimensions = true\n\n\texport let matrixWidth = 300\n\texport let matrixHeight = 200\n\texport let scrollbarHeight = 20\n\n\tlet collapsed = true\n\n\tlet dimX = null\n\tlet dimY = null\n\n\t$: {\n\t\tlet [scale, dim] = selectedDimension.split('.', 2)\n\t\tlet dims = Object.keys(dimensions[scale])\n\t\tdims.splice(dims.indexOf(dim), 1)\n\t\tdimX = `${scale}.${dims[0]}`\n\t\tdimY = `${scale}.${dims[1]}`\n\t}\n\n\t$: sliderWidth = matrixWidth - (selectDimensions ? 25 : 0) - (showLabels ? 25 : 0) - (showNumeric ? 65 : 0)\n\t$: textboxWidth = matrixWidth - (showLabels ? 50 : 0)\n\n\tconst expandPicker = () => {\n\t\tcollapsed = false\n\t\tdispatch('pickerExpand', { collapsed, color })\n\t}\n\tconst collapsePicker = () => {\n\t\tcollapsed = true\n\t\tdispatch('pickerCollapse', { collapsed, color })\n\t}\n</script>\n\n<div class='color-picker {collapse ? \"collapse\" : \"\"}'>\n\n\n\t{#if collapse && !collapsed}\n\t\t<div class='color-picker-background' on:click={collapsePicker}/>\n\t{/if}\n\n\t{#if collapse}\n\t<div class=\"color-picker-handle\" style='width: {handleWidth}px; height: {handleHeight}px; background: {color.toHex()};' on:click={expandPicker}></div>\n\t{/if}\n\n\t<div class='color-picker-controls {collapse && collapsed ? \"collapsed\" : \"\"}' style=\"background: {background};\">\n\t\t{#if showMatrix}\n\t\t<Matrix\n\t\t\tbind:color={color}\n\t\t\tdimensionX={dimX}\n\t\t\tdimensionY={dimY}\n\t\t\twidth={matrixWidth}\n\t\t\theight={matrixHeight}\n\t\t/>\n\t\t{/if}\n\n\t\t{#if showSliders}\n\n\t\t{#if tabbed}\n\t\t<div class=\"tab-bar\">\n\t\t\t{#each Object.keys(dimensions) as scale}\n\t\t\t\t{#if Object.keys(dimensions[scale]).some((dim) => showSliders[`${scale}.${dim}`] ) }\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"tab {selectedTab === scale ? 'active' : ''}\"\n\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\tselectedTab = scale\n\t\t\t\t\t\t\tselectedDimension = `${scale}.${Object.keys(dimensions[scale])[0]}`\n\t\t\t\t\t\t}}\n\t\t\t\t\t>{scale}</div>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#each Object.keys(dimensions) as scale}\n\t\t{#if !tabbed || selectedTab === scale}\n\t\t<div class=\"group\">\n\t\t\t{#each Object.keys(dimensions[scale]) as dim}\n\t\t\t\t{#if showSliders[`${scale}.${dim}`]}\n\t\t\t\t<div class=\"slider\">\n\t\t\t\t\t{#if selectDimensions}\n\t\t\t\t\t\t<input type=\"radio\" bind:group={selectedDimension} value=\"{scale}.{dim}\" id=\"{scale}-{dim}\">\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if showLabels}\n\t\t\t\t\t\t<label for=\"{scale}-{dim}\">{dim.toUpperCase()}</label>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<ScrollBar width={sliderWidth} height={scrollbarHeight} dimension=\"{scale}.{dim}\" bind:color={color}/>\n\n\t\t\t\t\t{#if showNumeric}\n\t\t\t\t\t\t<DimInput bind:color={color} dimension=\"{scale}.{dim}\"/>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t</div>\n\t\t{/if}\n\t\t{/each}\n\t\t{/if}\n\n\t\t{#if showHex}\n\t\t<div class=\"group\">\n\t\t\t<div class=\"text\">\n\t\t\t\t{#if showLabels}\n\t\t\t\t<label for=\"hex\">Hex</label>\n\t\t\t\t{/if}\n\t\t\t\t<HexInput bind:color={color} width={textboxWidth} id=\"hex\"/>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\t</div>\n</div>\n\n\n<style>\n\t.color-picker {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t}\n\n\t.color-picker-handle {\n\t\tborder: 1px solid #666;\n\t\tborder-radius: 5px;\n\t\tcursor: pointer;\n\t}\n\n\t.color-picker-background {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground: rgba(0, 0, 0, 0.2);\n\t\tz-index: 9999999;\n\t}\n\n\t.color-picker.collapse .color-picker-controls {\n\t\tposition: absolute;\n\t\ttop: -5px;\n\t\tleft: -5px;\n\n\t\tborder: 1px solid #666;\n\t\tborder-radius: 5px;\n\t\tbox-shadow: 2px 2px 5px 0px rgba(0,0,0,0.4);\n\t\tpadding: 5px;\n\n\t\tz-index: 100000000;\n\t}\n\n\t.color-picker.collapse .color-picker-controls.collapsed {\n\t\tdisplay: none;\n\t}\n\n\t.tab-bar {\n\t\tdisplay: flex;\n\t\theight: 30px;\n\t\tline-height: 30px;\n\t}\n\n\t.tab {\n\t\tmargin: 0 5px;\n\t\tpadding: 0 3px;\n\t\tborder-bottom: 1px solid #aaa;\n\t\tcursor: pointer;\n\t\ttext-transform: uppercase;\n\t\tfont-weight: bold;\n\t}\n\n\t.tab.active {\n\t\tborder-bottom-width: 3px;\n\t}\n\n\t.group {\n\t\tmargin: 5px 0 0 0;\n\t}\n\n\t.slider, .text {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\tlabel {\n\t\tdisplay: inline;\n\t\tvertical-align: middle;\n\t\tmargin: 0;\n\t}\n\n\t.slider label {\n\t\tpadding: 0 5px 0 0;\n\t\twidth: 20px;\n\t}\n\n\t.text label {\n\t\tpadding: 0 5px 0 0;\n\t\twidth: 45px;\n\t\ttext-align: right;\n\t}\n\n\tinput[type=radio] {\n\t\tdisplay: inline-block;\n\t\tmargin: 0 5px 0 0;\n\t\twidth: 20px;\n\t}\n</style>\n","<script>\n\timport { ColorPicker, dimensions, Color } from 'svelte-colorpick'\n\n\tlet color = Color.hex('#228800')\n\tlet background = '#fff'\n\tlet collapse = false\n\n\tlet settings;\n\n\tlet handleWidth = 32\n\tlet handleHeight = 32\n\n\tlet presets = {\n\t\tfull: {\n\t\t\tselectedDimension: 'hsl.h',\n\n\t\t\ttabbed: true,\n\t\t\tselectedTab: 'hsl',\n\n\t\t\tshowMatrix: true,\n\t\t\tshowSlidersGlobal: true,\n\t\t\tshowHex: true,\n\t\t\tshowNumeric: true,\n\t\t\tshowLabels: true,\n\n\t\t\tshowSliders: {\n\t\t\t\t\"hsl.h\": true,\n\t\t\t\t\"hsl.s\": true,\n\t\t\t\t\"hsl.l\": true,\n\n\t\t\t\t\"hcl.h\": true,\n\t\t\t\t\"hcl.c\": true,\n\t\t\t\t\"hcl.l\": true,\n\n\t\t\t\t\"lab.l\": true,\n\t\t\t\t\"lab.a\": true,\n\t\t\t\t\"lab.b\": true,\n\n\t\t\t\t\"rgb.r\": true,\n\t\t\t\t\"rgb.g\": true,\n\t\t\t\t\"rgb.b\": true,\n\t\t\t},\n\n\t\t\tselectDimensions: true,\n\n\t\t\tmatrixWidth: 300,\n\t\t\tmatrixHeight: 200,\n\t\t\tscrollbarHeight: 20,\n\t\t},\n\n\t\thsl: {\n\t\t\tselectedDimension: 'hsl.h',\n\n\t\t\ttabbed: false,\n\t\t\tselectedTab: 'hsl',\n\n\t\t\tshowMatrix: true,\n\t\t\tshowSlidersGlobal: true,\n\t\t\tshowHex: true,\n\t\t\tshowNumeric: true,\n\t\t\tshowLabels: true,\n\n\t\t\tshowSliders: {\n\t\t\t\t\"hsl.h\": true,\n\t\t\t\t\"hsl.s\": true,\n\t\t\t\t\"hsl.l\": true,\n\t\t\t},\n\n\t\t\tselectDimensions: true,\n\n\t\t\tmatrixWidth: 300,\n\t\t\tmatrixHeight: 200,\n\t\t\tscrollbarHeight: 20,\n\t\t},\n\n\t\thcl: {\n\t\t\tselectedDimension: 'hcl.h',\n\n\t\t\ttabbed: false,\n\t\t\tselectedTab: 'hcl',\n\n\t\t\tshowMatrix: true,\n\t\t\tshowSlidersGlobal: true,\n\t\t\tshowHex: true,\n\t\t\tshowNumeric: true,\n\t\t\tshowLabels: true,\n\n\t\t\tshowSliders: {\n\t\t\t\t\"hcl.h\": true,\n\t\t\t\t\"hcl.c\": true,\n\t\t\t\t\"hcl.l\": true,\n\t\t\t},\n\n\t\t\tselectDimensions: true,\n\n\t\t\tmatrixWidth: 300,\n\t\t\tmatrixHeight: 200,\n\t\t\tscrollbarHeight: 20,\n\t\t},\n\n\t\tminiLab: {\n\t\t\tselectedDimension: 'lab.l',\n\n\t\t\ttabbed: false,\n\t\t\tselectedTab: 'lab',\n\n\t\t\tshowMatrix: true,\n\t\t\tshowSlidersGlobal: true,\n\t\t\tshowHex: false,\n\t\t\tshowNumeric: true,\n\t\t\tshowLabels: true,\n\n\t\t\tshowSliders: {\n\t\t\t\t\"lab.l\": true,\n\t\t\t},\n\n\t\t\tselectDimensions: false,\n\n\t\t\tmatrixWidth: 200,\n\t\t\tmatrixHeight: 200,\n\t\t\tscrollbarHeight: 20,\n\t\t},\n\n\t\tminiHsl: {\n\t\t\tselectedDimension: 'hsl.h',\n\n\t\t\ttabbed: false,\n\t\t\tselectedTab: 'hsl',\n\n\t\t\tshowMatrix: true,\n\t\t\tshowSlidersGlobal: true,\n\t\t\tshowHex: false,\n\t\t\tshowNumeric: false,\n\t\t\tshowLabels: false,\n\n\t\t\tshowSliders: {\n\t\t\t\t\"hsl.h\": true,\n\t\t\t},\n\n\t\t\tselectDimensions: false,\n\n\t\t\tmatrixWidth: 150,\n\t\t\tmatrixHeight: 150,\n\t\t\tscrollbarHeight: 10,\n\t\t},\n\n\t\tminiHcl: {\n\t\t\tselectedDimension: 'hcl.h',\n\n\t\t\ttabbed: false,\n\t\t\tselectedTab: 'hcl',\n\n\t\t\tshowMatrix: true,\n\t\t\tshowSlidersGlobal: true,\n\t\t\tshowHex: false,\n\t\t\tshowNumeric: false,\n\t\t\tshowLabels: false,\n\n\t\t\tshowSliders: {\n\t\t\t\t\"hcl.h\": true,\n\t\t\t},\n\n\t\t\tselectDimensions: false,\n\n\t\t\tmatrixWidth: 150,\n\t\t\tmatrixHeight: 150,\n\t\t\tscrollbarHeight: 10,\n\t\t},\n\t}\n\n\tfunction applyPreset (name) {\n\t\tsettings = JSON.parse(JSON.stringify(presets[name]))\n\t}\n\n\tapplyPreset('full')\n\n\tfunction onPickerExpand (e) {\n\t\tconsole.log('Picker Expand', e.detail)\n\t}\n\n\tfunction onPickerCollapse (e) {\n\t\tconsole.log('Picker Collapse', e.detail)\n\t}\n\n\t$: {\n\t\tif (color.isDark()) {\n\t\t\tdocument.body.classList.remove('dark')\n\t\t\tbackground = '#fff'\n\t\t} else {\n\t\t\tdocument.body.classList.add('dark')\n\t\t\tbackground = '#222'\n\t\t}\n\t}\n</script>\n\n<div class=\"wrapper\">\n\t<div class=\"title\">\n\t\t<h1 style=\"color: {color.toHex()};\">svelte-colorpick</h1>\n\t\t<p>A fully-featured color picker for <a href=\"https://svelte.dev\">Svelte</a>.</p>\n\t</div>\n\n\t<ul class=\"links\">\n\t\t<li><a href=\"https://github.com/sseemayer/svelte-colorpick\">GitHub</a>\n\t\t<li><a href=\"https://npmjs.com/package/svelte-colorpick\">npm</a>\n\t</ul>\n\n\n\t<h2 style=\"color: {color.toHex()};\">Demo</h2>\n\t<div class=\"layout\">\n\n\t\t<div class=\"demo-container\">\n\t\t\t<div class=\"demo\">\n\t\t\t\t<ColorPicker\n\t\t\t\t\tbind:color={color}\n\t\t\t\t\tbackground={background}\n\n\t\t\t\t\tcollapse={collapse}\n\t\t\t\t\ton:pickerExpand={onPickerExpand}\n\t\t\t\t\ton:pickerCollapse={onPickerCollapse}\n\n\t\t\t\t\thandleWidth={handleWidth}\n\t\t\t\t\thandleHeight={handleHeight}\n\n\t\t\t\t\ttabbed={settings.tabbed}\n\t\t\t\t\tselectedTab={settings.selectedTab}\n\n\t\t\t\t\tselectedDimension={settings.selectedDimension}\n\n\t\t\t\t\tshowMatrix={settings.showMatrix}\n\t\t\t\t\tshowSliders={settings.showSlidersGlobal && settings.showSliders}\n\t\t\t\t\tshowHex={settings.showHex}\n\t\t\t\t\tshowLabels={settings.showLabels}\n\t\t\t\t\tshowNumeric={settings.showNumeric}\n\t\t\t\t\tselectDimensions={settings.selectDimensions}\n\n\t\t\t\t\tmatrixWidth={settings.matrixWidth}\n\t\t\t\t\tmatrixHeight={settings.matrixHeight}\n\t\t\t\t\tscrollbarHeight={settings.scrollbarHeight}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class='settings-panel'>\n\t\t\t<h2 style=\"color: {color.toHex()};\">Settings</h2>\n\t\t\t<h3 style=\"color: {color.toHex()};\">Mode</h3>\n\t\t\t<div>\n\t\t\t\t<input id='collapse' type='checkbox' bind:checked={collapse}/>\n\t\t\t\t<label for='collapse'>collapse</label>\n\t\t\t\t<input id='handleWidth' type='number' min=10 max=100 bind:value={handleWidth}/>x\n\t\t\t\t<input id='handleHeight' type='number' min=10 max=100 bind:value={handleHeight}/>\n\t\t\t</div>\n\n\t\t\t<h3 style=\"color: {color.toHex()};\">Presets</h3>\n\t\t\t{#each Object.keys(presets) as preset}\n\t\t\t\t<button on:click={() => applyPreset(preset)}>{preset}</button>\n\t\t\t{/each}\n\n\t\t\t<h3 style=\"color: {color.toHex()};\">UI Elements</h3>\n\t\t\t<div>\n\t\t\t\t<input id='showMatrix' type='checkbox' bind:checked={settings.showMatrix}/>\n\t\t\t\t<label for='showMatrix'>showMatrix</label>\n\t\t\t\t<input id='matrixWidth' type='number' min=100 max=600 bind:value={settings.matrixWidth}/>x\n\t\t\t\t<input id='matrixHeight' type='number' min=100 max=600 bind:value={settings.matrixHeight}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input id='showSliders' type='checkbox' bind:checked={settings.showSlidersGlobal}/>\n\t\t\t\t<label for='showSliders'>showSliders</label>\n\t\t\t</div>\n\t\t\t{#if settings.showSlidersGlobal}\n\t\t\t\t<div class=\"indent\">\n\t\t\t\t\t<input id='tabbed' type='checkbox' bind:checked={settings.tabbed}/>\n\t\t\t\t\t<label for='tabbed'>tabbed</label>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"indent\">\n\t\t\t\t\t<input id='showNumeric' type='checkbox' bind:checked={settings.showNumeric}/>\n\t\t\t\t\t<label for='showNumeric'>showNumeric</label>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"indent\">\n\t\t\t\t\t<input id='selectDimensions' type='checkbox' bind:checked={settings.selectDimensions}/>\n\t\t\t\t\t<label for='selectDimensions'>selectDimensions</label>\n\t\t\t\t</div>\n\n\n\t\t\t\t{#each Object.keys(dimensions) as scale}\n\t\t\t\t\t<div class=\"indent\"><span class=\"dimension\">{scale}</span>\n\n\t\t\t\t\t\t{#each Object.keys(dimensions[scale]) as dim}\n\t\t\t\t\t\t\t<div class=\"scale-dim\">\n\t\t\t\t\t\t\t\t<input id='showSliders-{scale}-{dim}' type='checkbox' bind:checked={settings.showSliders[`${scale}.${dim}`]}/>\n\t\t\t\t\t\t\t\t<label for='showSliders-{scale}-{dim}'>{dim}</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t\t<div>\n\t\t\t\t<input id='showLabels' type='checkbox' bind:checked={settings.showLabels}/>\n\t\t\t\t<label for='showLabels'>showLabels</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input id='showHex' type='checkbox' bind:checked={settings.showHex}/>\n\t\t\t\t<label for='showHex'>showHex</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label for='scrollbarHeight'>scroll</label>\n\t\t\t\t<input id='scrollbarHeight' type='number' min=10 max=100 bind:value={settings.scrollbarHeight}/>\n\t\t\t</div>\n\n\t\t</div>\n\t</div>\n\n\t<h2 style=\"color: {color.toHex()};\">Installation</h2>\n\n\t<code><pre>npm install --save svelte-colorpick</pre></code>\n\n\t<h2 style=\"color: {color.toHex()};\">Usage</h2>\n\n\t<code><pre>\n&lt;script&gt;\n    import &lbrace; ColorPicker, Color &rbrace; from 'svelte-colorpick'\n    let color = Color.hex('#ccff00')\n&lt;/script&gt;\n\n&lt;ColorPicker bind:color=&lbrace;color&rbrace;/&gt;\n\n&lt;p&gt;Your color is currently &lbrace;color.toHex()&rbrace;&lt;/p&gt;\n\t</pre></code>\n\n\t<h2 style=\"color: {color.toHex()};\">License</h2>\n\tMIT\n</div>\n\n<style>\n\n\th1, h2, h3, h4 {\n\t\tfont-weight: 400;\n\t}\n\n\t.title h1 {\n\t\tmargin: 10px 0 5px 0;\n\t\tfont-size: 250%;\n\t\tdisplay: inline-block;\n\t}\n\n\t.title p {\n\t\tdisplay: inline-block;\n\t\tmargin: 0;\n\t}\n\n\tul.links {\n\t\tlist-style: none;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\tul.links:before {\n\t\tcontent: \"> \";\n\t}\n\t\n\tul.links li {\n\t\tdisplay: inline-block;\n\t\tpadding: 3px 5px;\n\t}\n\n\tul.links li:first-child {\n\t\tpadding-left: 0;\n\t}\n\n\t.demo-container {\n\t\tmargin: 0 30px 30px 0;\n\t\tflex-grow: 10;\n\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t@media (max-width: 600px) {\n\t\t.wrapper {\n\t\t\tpadding: 10px;\n\t\t}\n\t\t.layout {\n\t\t\tflex-direction: column;\n\t\t}\n\n\t\t.demo-container {\n\t\t\tmargin: 0 0 30px 0;\n\t\t}\n\t}\n\n\t.indent {\n\t\tmargin-left: 30px;\n\t}\n\n\t.dimension {\n\t\tfont-weight: bold;\n\t\tdisplay: inline-block;\n\t\twidth: 40px;\n\t\tpadding-left: 20px;\n\t}\n\n\t.scale-dim {\n\t\tdisplay: inline-block;\n\t\twidth: 30px;\n\t\tmargin-right: 5px;\n\t}\n\n\tinput[type=checkbox], label {\n\t\tdisplay: inline-block;\n\t}\n\n\t#matrixWidth, #matrixHeight, #scrollbarHeight, #handleWidth, #handleHeight {\n\t\twidth: 80px;\n\t}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_input_value","input","set_style","key","important","style","setProperty","crossorigin","current_component","is_crossorigin","window","parent","error","add_resize_listener","computed_style","getComputedStyle","z_index","parseInt","zIndex","position","iframe","tabIndex","unsubscribe","src","source","contentWindow","onload","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","bound","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","Color","mode","rgb","hex","d3.rgb","hsl","hcl","colMode","to","JSON","parse","stringify","dim","split","k","tuple","color","colorConverted","d3","fromEntries","entries","v","vals","values","formatHex","g","dimensions","h","extent","scale","title","s","lab","getDimension","specifier","relativePosition","clientX","clientY","rect","getBoundingClientRect","relativeX","x","relativeY","y","offsetX","offsetY","eventTypeConversion","touchstart","touchmove","touchend","touchHandler","first","changedTouches","simulatedEvent","MouseEvent","screenX","screenY","button","buttons","dispatchEvent","preventDefault","touchToMouse","canvas","cWidth","cHeight","dimension","width","height","getContext","get","sliderPos","imageSmoothingEnabled","clearRect","Math","min","xStep","range","colBase","col","alter","fillStyle","toHex","fillRect","round","ceil","dimensionX","dimensionY","detailX","detailY","dimX","dimY","valueX","valueY","sliderPosX","sliderPosY","dX","dY","yStep","rangeX","rangeY","vY","colY","vX","colYX","pos","roundedValue","id","some","toUpperCase","dispatch","selectedDimension","selectedTab","background","collapse","tabbed","handleWidth","handleHeight","showMatrix","showSliders","showHex","showNumeric","showLabels","selectDimensions","matrixWidth","matrixHeight","scrollbarHeight","collapsed","dims","sliderWidth","textboxWidth","showSlidersGlobal","onPickerExpand","onPickerCollapse","console","log","settings","presets","full","hsl.h","hsl.s","hsl.l","hcl.h","hcl.c","hcl.l","lab.l","lab.a","lab.b","rgb.r","rgb.g","rgb.b","miniLab","miniHsl","miniHcl","applyPreset","isDark","body","classList","remove","preset"],"mappings":"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"}